name: Build and push Docker image

on:
  push:
    branches:
      - master
    paths:
      - 'nodejs.Dockerfile'
      - 'nodejs.entrypoint.sh'
      - 'python.Dockerfile'
      - 'python.entrypoint.sh'
  workflow_dispatch:

jobs:
  nodejs:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') && !contains(github.event.head_commit.message, '[skip-js]') }}
    strategy:
      fail-fast: false
      matrix:
        node_version: [12, 14, 16, 18, 19, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: NODE_VERSION=${{ matrix.node_version }}
          context: .
          file: nodejs.Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: djoh/all-in-one:node${{ matrix.node_version }}
          cache-from: type=registry,ref=djoh/all-in-one:buildcache_node${{ matrix.node_version }}
          cache-to: type=registry,ref=djoh/all-in-one:buildcache_node${{ matrix.node_version }},mode=max

  python:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') && !contains(github.event.head_commit.message, '[skip-py]') }}
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.8.17, 3.9.17, 3.10.12, 3.11.4]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract first two elements
        id: extract
        run: |
          str="${{ matrix.python_version }}"
          IFS='.' read -ra arr <<< "$str"
          result="${arr[0]}.${arr[1]}"
          echo "::set-output name=result::$result"

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTHON_VERSION_SHORT=${{ steps.extract.outputs.result }}
          context: .
          file: python.Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: "djoh/all-in-one:python${{ steps.extract.outputs.result }}"
          cache-from: type=registry,ref=djoh/all-in-one:buildcache_python${{ matrix.python_version }}
          cache-to: type=registry,ref=djoh/all-in-one:buildcache_python${{ matrix.python_version }},mode=max
